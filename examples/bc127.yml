esphome:
  name: uartesp32
  # on_boot:
  #   priority: 200
  #   then:
  #     - switch.turn_off: switch_1

logger:
  level: DEBUG

esp32:
  board: esp32dev
  framework:
    type: arduino

uart:
  id: my_uart
  tx_pin: GPIO17  
  rx_pin: GPIO16
  baud_rate: 9600
  parity: NONE
  data_bits: 8 
  stop_bits: 1

  # debug:
  #   direction: BOTH
  #   dummy_receiver: true
  #   after:
  #     delimiter: "\n"
  #   sequence:
  #     - lambda: |-
  #         UARTDebug::log_string(direction, bytes);


external_components:
  source: esphome-components/components
  components: [bc127]
  refresh: 0s

bc127:
  # uart_id: my_uart
# std::string json_str(bytes.begin(), bytes.end());
# StaticJsonDocument<256> doc;  // Adjust size as needed
# DeserializationError error = deserializeJson(doc, json_str);
# if (error) {
#   Serial.print(F("Failed to parse JSON: "));
#   Serial.println(error.c_str());
#   return;
# }
# if (doc.containsKey("example_key")) {
#   const char* example_value = doc["example_key"];
#   Serial.print("Parsed value: ");
#   Serial.println(example_value);
# }
